{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","react_default","a","createElement","style","fontSize","color","backgroundColor","textAlign","border","position","top","src","alt","width","height","left","MemeGenerator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topText","bottomText","randomImg","allMemeImg","handleChange","bind","assertThisInitialized","handleSubmit","_this2","fetch","then","response","json","setState","data","memes","event","defineProperty","target","name","value","preventDefault","randomNum","Math","floor","random","length","ranImg","url","className","onSubmit","type","placeholder","onChange","React","Component","App","src_Header","src_MemeGenerator","ReactDOM","render","src_App","document","getElementById"],"mappings":"gNA+BeA,MA3Bf,WAkBI,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,MAXM,CACdC,SAAS,QACTC,MAAM,QACNC,gBAAgB,MAChBC,UAAU,SACVC,OAAQ,kBACRC,SAAS,WACTC,IAAI,UAIA,kBACAV,EAAAC,EAAAC,cAAA,OAAKS,IAAI,iEAAiEC,IAAI,WAAWT,MApB7E,CAChBU,MAAM,QACNC,OAAO,QACPL,SAAU,WACVC,IAAI,OACJK,KAAK,4BCmDEC,cAzDX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAM,CACPC,QAAQ,GACRC,WAAW,GACXC,UAAU,gCACVC,WAAW,IAEfX,EAAKY,aAAaZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IAClBA,EAAKe,aAAaf,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IATTA,mFAYM,IAAAgB,EAAAb,KACfc,MAAM,qCAAqCC,KAAK,SAAAC,GAAQ,OAAGA,EAASC,SAAQF,KAAK,SAAAC,GAC7EH,EAAKK,SAAS,CACVV,WAAWQ,EAASG,KAAKC,+CAKxBC,GACTrB,KAAKkB,SAALpB,OAAAwB,EAAA,EAAAxB,CAAA,GACKuB,EAAME,OAAOC,KAAMH,EAAME,OAAOE,6CAI5BJ,GACTA,EAAMK,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAU9B,KAAKI,MAAMI,WAAWuB,QAC1DC,EAAOhC,KAAKI,MAAMI,WAAWmB,GAAWM,IAC9CjC,KAAKkB,SAAS,CACVX,UAAWyB,qCAKf,OACIpD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMoD,UAAU,YAAYC,SAAUnC,KAAKY,cACvChC,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,OAAOC,YAAY,WAAWb,KAAK,UAAUC,MAAOzB,KAAKI,MAAMC,QAASiC,SAAUtC,KAAKS,eACnG7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOsD,KAAK,OAAOC,YAAY,cAAcb,KAAK,aAAaC,MAAOzB,KAAKI,MAAME,WAAYgC,SAAUtC,KAAKS,eAC5G7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BAEJF,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,YACXtD,EAAAC,EAAAC,cAAA,OAAKS,IAAKS,KAAKI,MAAMG,UAAYf,IAAI,QACrCZ,EAAAC,EAAAC,cAAA,MAAIoD,UAAU,OAAOlC,KAAKI,MAAMC,SAChCzB,EAAAC,EAAAC,cAAA,MAAIoD,UAAU,UAAUlC,KAAKI,MAAME,qBAnD3BiC,IAAMC,WCajBC,mLATT,OACI7D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAC6D,EAAD,cANIJ,IAAMC,WCA1BI,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAAQC,SAASC,eAAe","file":"static/js/main.a4658cdb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\n\r\nfunction Header(){\r\n    const styles_header={\r\n        width:\"100px\",\r\n        height:\"100px\",\r\n        position: \"absolute\",\r\n        top:\"30px\",\r\n        left:\"100px\",\r\n        \r\n    }\r\n    const styles_para={\r\n        fontSize:\"100px\",\r\n        color:\"white\",\r\n        backgroundColor:\"red\",\r\n        textAlign:\"center\",\r\n        border: \"5px solid white\",\r\n        position:\"relative\",\r\n        top:\"-50px\"\r\n    }\r\n    return(\r\n        <div>\r\n            <h1 style={styles_para}>MEME GENERATOR</h1>\r\n            <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" alt=\"problem?\" style={styles_header} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './style.css';\r\n\r\nclass MemeGenerator extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            topText:\"\",\r\n            bottomText:\"\",\r\n            randomImg:\"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImg:[]\r\n        }\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\").then(response =>response.json()).then(response=>{\r\n            this.setState({\r\n                allMemeImg:response.data.memes\r\n            });\r\n        })\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const randomNum=Math.floor(Math.random()* this.state.allMemeImg.length);\r\n        const ranImg=this.state.allMemeImg[randomNum].url;\r\n        this.setState({\r\n            randomImg: ranImg\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"Top Text\" name=\"topText\" value={this.state.topText} onChange={this.handleChange} />\r\n                    <br />\r\n                    <br />\r\n                    <input type=\"text\" placeholder=\"Bottom Text\" name=\"bottomText\" value={this.state.bottomText} onChange={this.handleChange} />\r\n                    <br />\r\n                    <br />\r\n                    <button>Change Meme</button>\r\n                </form>\r\n                <div className=\"img-meme\">\r\n                    <img src={this.state.randomImg}  alt=\"pro\"/>\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport MemeGenerator from './MemeGenerator';\r\n\r\n  class App extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header />\r\n                <MemeGenerator />\r\n            </div>\r\n        );\r\n    }\r\n  }  \r\n\r\n  export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}